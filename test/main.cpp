#include "gtest/gtest.h"

#include "AbstractSyntax/AnonymousConstant.cpp"
#include "AbstractSyntax/Argument.cpp"
#include "AbstractSyntax/ArrayExpression.cpp"
#include "AbstractSyntax/ArrayType.cpp"
#include "AbstractSyntax/AssignmentStatement.cpp"
#include "AbstractSyntax/BlockStatement.cpp"
#include "AbstractSyntax/BooleanLiteralExpression.cpp"
#include "AbstractSyntax/BooleanType.cpp"
#include "AbstractSyntax/BottomType.cpp"
#include "AbstractSyntax/CallExpression.cpp"
#include "AbstractSyntax/ClassDeclaration.cpp"
#include "AbstractSyntax/ClosureExpression.cpp"
#include "AbstractSyntax/ConditionalStatement.cpp"
#include "AbstractSyntax/ConstantDeclaration.cpp"
#include "AbstractSyntax/Declaration.cpp"
#include "AbstractSyntax/DeclarationStatement.cpp"
#include "AbstractSyntax/Expression.cpp"
#include "AbstractSyntax/ExpressionStatement.cpp"
#include "AbstractSyntax/FloatingPointLiteralExpression.cpp"
#include "AbstractSyntax/FloatingPointType.cpp"
#include "AbstractSyntax/FunctionDeclaration.cpp"
#include "AbstractSyntax/FunctionPrototype.cpp"
#include "AbstractSyntax/FunctionType.cpp"
#include "AbstractSyntax/GroupedExpression.cpp"
#include "AbstractSyntax/Identifier.cpp"
#include "AbstractSyntax/IdentifierPattern.cpp"
#include "AbstractSyntax/ImportDeclaration.cpp"
#include "AbstractSyntax/IndexExpression.cpp"
#include "AbstractSyntax/InfixExpression.cpp"
#include "AbstractSyntax/InfixOperation.cpp"
#include "AbstractSyntax/IntegerLiteralExpression.cpp"
#include "AbstractSyntax/IntegerType.cpp"
#include "AbstractSyntax/Literal.cpp"
#include "AbstractSyntax/LiteralExpression.cpp"
#include "AbstractSyntax/LiteralPattern.cpp"
#include "AbstractSyntax/ModuleDeclaration.cpp"
#include "AbstractSyntax/Name.cpp"
#include "AbstractSyntax/Operator.cpp"
#include "AbstractSyntax/OperatorExpression.cpp"
#include "AbstractSyntax/Parameter.cpp"
#include "AbstractSyntax/Path.cpp"
#include "AbstractSyntax/PathExpression.cpp"
#include "AbstractSyntax/PathPattern.cpp"
#include "AbstractSyntax/PathSegment.cpp"
#include "AbstractSyntax/PathType.cpp"
#include "AbstractSyntax/Pattern.cpp"
#include "AbstractSyntax/PlaceExpression.cpp"
#include "AbstractSyntax/PointerType.cpp"
#include "AbstractSyntax/Position.cpp"
#include "AbstractSyntax/PostfixExpression.cpp"
#include "AbstractSyntax/PrefixExpression.cpp"
#include "AbstractSyntax/PrefixOperation.cpp"
#include "AbstractSyntax/ReferencePattern.cpp"
#include "AbstractSyntax/ReferenceType.cpp"
#include "AbstractSyntax/ReturnStatement.cpp"
#include "AbstractSyntax/SizeType.cpp"
#include "AbstractSyntax/SlicePattern.cpp"
#include "AbstractSyntax/SliceType.cpp"
#include "AbstractSyntax/Statement.cpp"
#include "AbstractSyntax/SubroutineDeclaration.cpp"
#include "AbstractSyntax/TranslationUnit.cpp"
#include "AbstractSyntax/TupleExpression.cpp"
#include "AbstractSyntax/TuplePattern.cpp"
#include "AbstractSyntax/TupleType.cpp"
#include "AbstractSyntax/Type.cpp"
#include "AbstractSyntax/TypeDeclaration.cpp"
#include "AbstractSyntax/ValueExpression.cpp"
#include "AbstractSyntax/VariableDeclaration.cpp"
#include "AbstractSyntax/WildcardPattern.cpp"

int main(int argc, char **argv) {
  testing::InitGoogleTest(&argc, argv);

  return RUN_ALL_TESTS();
}
