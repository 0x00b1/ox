#include "Generator.h"

void Generator::accept(std::shared_ptr<Node::AnonymousConstant> node) {}
void Generator::accept(std::shared_ptr<Node::Argument> node) {}
void Generator::accept(std::shared_ptr<Node::ArrayExpression> node) {}
void Generator::accept(std::shared_ptr<Node::ArrayType> node) {}
void Generator::accept(std::shared_ptr<Node::AssignmentStatement> node) {}
void Generator::accept(std::shared_ptr<Node::BlockStatement> node) {}
void Generator::accept(std::shared_ptr<Node::BooleanLiteral> node) {}
void Generator::accept(std::shared_ptr<Node::BooleanType> node) {}
void Generator::accept(std::shared_ptr<Node::BottomType> node) {}
void Generator::accept(std::shared_ptr<Node::CallExpression> node) {}
void Generator::accept(std::shared_ptr<Node::ClosureExpression> node) {}
void Generator::accept(std::shared_ptr<Node::ConditionalStatement> node) {}
void Generator::accept(std::shared_ptr<Node::ConstantItem> node) {}
void Generator::accept(std::shared_ptr<Node::ExpressionStatement> node) {}
void Generator::accept(std::shared_ptr<Node::ExternalPackageItem> node) {}
void Generator::accept(std::shared_ptr<Node::FloatingPointLiteral> node) {}
void Generator::accept(std::shared_ptr<Node::FloatingPointType> node) {}
void Generator::accept(std::shared_ptr<Node::FunctionDeclaration> node) {}
void Generator::accept(std::shared_ptr<Node::FunctionType> node) {}
void Generator::accept(std::shared_ptr<Node::Identifier> node) {}
void Generator::accept(std::shared_ptr<Node::IndexExpression> node) {}
void Generator::accept(std::shared_ptr<Node::IntegerLiteral> node) {}
void Generator::accept(std::shared_ptr<Node::IntegerType> node) {}
void Generator::accept(std::shared_ptr<Node::ItemStatement> node) {}
void Generator::accept(std::shared_ptr<Node::Literal> node) {}
void Generator::accept(std::shared_ptr<Node::LiteralExpression> node) {}
void Generator::accept(std::shared_ptr<Node::LiteralPattern> node) {}
void Generator::accept(std::shared_ptr<Node::ModuleItem> node) {}
void Generator::accept(std::shared_ptr<Node::Name> node) {}
void Generator::accept(std::shared_ptr<Node::Parameter> node) {}
void Generator::accept(std::shared_ptr<Node::PathExpression> node) {}
void Generator::accept(std::shared_ptr<Node::PathPattern> node) {}
void Generator::accept(std::shared_ptr<Node::PathType> node) {}
void Generator::accept(std::shared_ptr<Node::PointerType> node) {}
void Generator::accept(std::shared_ptr<Node::ReferenceType> node) {}
void Generator::accept(std::shared_ptr<Node::ReturnStatement> node) {}
void Generator::accept(std::shared_ptr<Node::SlicePattern> node) {}
void Generator::accept(std::shared_ptr<Node::SliceType> node) {}
void Generator::accept(std::shared_ptr<Node::SubroutineItem> node) {}
void Generator::accept(std::shared_ptr<Node::TupleExpression> node) {}
void Generator::accept(std::shared_ptr<Node::TuplePattern> node) {}
void Generator::accept(std::shared_ptr<Node::TupleType> node) {}
void Generator::accept(std::shared_ptr<Node::TypeItem> node) {}
void Generator::accept(std::shared_ptr<Node::WildcardPattern> node) {}
