#ifndef OXC_SYNTAX_H
#define OXC_SYNTAX_H

#include "syntax/AnonymousConstant.hh"
#include "syntax/Argument.hh"
#include "syntax/ArrayExpression.hh"
#include "syntax/ArrayType.hh"
#include "syntax/AssignmentStatement.hh"
#include "syntax/BlockStatement.hh"
#include "syntax/BooleanLiteral.hh"
#include "syntax/BooleanType.hh"
#include "syntax/BottomType.hh"
#include "syntax/CallExpression.hh"
#include "syntax/ClosureExpression.hh"
#include "syntax/ConditionalStatement.hh"
#include "syntax/ConstantItem.hh"
#include "syntax/Expression.hh"
#include "syntax/ExpressionStatement.hh"
#include "syntax/ExternalPackageItem.hh"
#include "syntax/FloatingPointLiteral.hh"
#include "syntax/FloatingPointType.hh"
#include "syntax/FunctionDeclaration.hh"
#include "syntax/FunctionType.hh"
#include "syntax/Identifier.hh"
#include "syntax/IndexExpression.hh"
#include "syntax/IntegerLiteral.hh"
#include "syntax/IntegerType.hh"
#include "syntax/Item.hh"
#include "syntax/ItemStatement.hh"
#include "syntax/Literal.hh"
#include "syntax/LiteralExpression.hh"
#include "syntax/LiteralPattern.hh"
#include "syntax/ModuleItem.hh"
#include "syntax/Name.hh"
#include "syntax/Node.hh"
#include "syntax/Parameter.hh"
#include "syntax/PathPattern.hh"
#include "syntax/PathType.hh"
#include "syntax/PointerType.hh"
#include "syntax/ReferenceType.hh"
#include "syntax/ReturnStatement.hh"
#include "syntax/SlicePattern.hh"
#include "syntax/SliceType.hh"
#include "syntax/Statement.hh"
#include "syntax/SubroutineItem.hh"
#include "syntax/TupleExpression.hh"
#include "syntax/TuplePattern.hh"
#include "syntax/TupleType.hh"
#include "syntax/Type.hh"
#include "syntax/TypeItem.hh"
#include "syntax/WildcardPattern.hh"

#endif
